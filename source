local Players = game:GetService("Players")
local lp = Players.LocalPlayer

local function instantLeave()
    lp:Kick()
    wait()
    game:Shutdown()
end

tab4.new("button", {
    text = "Instant Leave",
}).event:Connect(function()
    instantLeave()
end)

local color1 = tab4.new("color", {
    color = Color3.new(1, 1, 1),
    text = "Worldcolor",
})

local function changeWorldColor(color)
    local localPlayer = game.Players.LocalPlayer

    
    local workspace = game.Workspace

    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and not part:IsDescendantOf(localPlayer.Character) then
            part.Color = color
        end
    end
end

color1.event:Connect(function(color)
    changeWorldColor(color)
end)

local player = game.Players.LocalPlayer
local humanoidRootPart = nil

local function onCharacterAdded(character)
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
end

player.CharacterAdded:Connect(onCharacterAdded)

if player.Character then
    onCharacterAdded(player.Character)
end

local slider1 = tab5.new("slider", {
    text = "Custom Yaw 1",
    color = Color3.new(0, 0, 0),
    min = 0,
    max = 360,
    value = 0,
    rounding = 1,
})
local slider2 = tab5.new("slider", {
    text = "Custom Yaw 2",
    color = Color3.new(0, 0, 0),
    min = 0,
    max = 360,
    value = 0,
    rounding = 1,
})
local currentYaw1 = 0
local currentYaw2 = 0
local isEnabled = false
local toggleIndex = 1

slider1.event:Connect(function(yaw)
    currentYaw1 = yaw
end)
slider1.set(0)

slider2.event:Connect(function(yaw)
    currentYaw2 = yaw
end)
slider2.set(0)

local switch1 = tab5.new("switch", {
    text = "Toggle Yaw Changer";
})
switch1.set(false)
switch1.event:Connect(function(yawtoggle)
    isEnabled = yawtoggle
end)

local function updatePlayerYaw()
    if isEnabled and humanoidRootPart and currentYaw1 ~= currentYaw2 then
        local currentCFrame = humanoidRootPart.CFrame
        local newYaw = (toggleIndex == 1) and currentYaw1 or currentYaw2
        local newCFrame = CFrame.new(currentCFrame.Position) * CFrame.Angles(0, math.rad(newYaw), 0)
        humanoidRootPart.CFrame = newCFrame
        toggleIndex = 3 - toggleIndex 
    end
end

game:GetService("RunService").RenderStepped:Connect(updatePlayerYaw)
